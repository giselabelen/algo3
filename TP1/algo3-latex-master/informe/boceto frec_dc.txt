Demostraremos a continuación que frecuency_dc tiene complejidad O ( n log (n) ).
En efecto, se puede notar que, de manera similar a merge_sort, siendo T(n) el tiempo que le toma a frecuency_dc manipular la lista de n elementos se debe cumplir lo siguiente:

                   T(n) = 2T(n/2) + c*n

ya que primero se deberá ordenar cada una de las mitades del arreglo y luego unirlas con un costo de O(n) representado por c*n.
En este caso el encargado de unir las listas será mezclar_freq (haciendo uso de aux mezcla a y b segun corresponda) que ciclara sobre los elementos de estas, haciendo las comparaciones de tiempos de inicio, fin y costos O(1) que indicarán la posición en la que se deben insertar los elementos O(1). En un proceso que no resulta mas costoso que O(n)

